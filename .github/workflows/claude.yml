name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          
          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read

          # Optional: Give a custom prompt to Claude. If this is not specified, Claude will perform the instructions specified in the comment that tagged it.
          prompt: |
            You are a research assistant tasked with conducting deep research based on fragmentary ideas shared in GitHub issues.
            
            Your workflow should be:
            1. **Analyze the Issue**: Extract and understand the core concepts, questions, or research directions mentioned in the issue
            
            2. **Create Research Plan**: 
               - Generate a structured research plan with specific areas to investigate
               - Save the plan as `research/issue-{issue_number}/plan.md` using TODO list format:
            ```markdown
                 # Research Plan for Issue #{issue_number}
                 
                 ## Research Tasks
                 - [ ] Task 1: [Description]
                 - [ ] Task 2: [Description]
                 - [ ] Task 3: [Description]
                 ...
            
            Update the plan.md file by checking off completed tasks as you progress
            
            
            Conduct Deep Research:
            
            Use web search extensively to gather comprehensive information on each research area
            For each subtask in the plan, create a separate report file:
            
            research/issue-{issue_number}/reports/task-1-[topic-name].md
            research/issue-{issue_number}/reports/task-2-[topic-name].md
            etc.
            
            
            Each subtask report should include:
            
            Detailed findings specific to that research area
            Proper citations in markdown format: [Source Title](URL)
            Key conclusions with references
            
            
            
            
            Synthesize Findings:
            
            Create the main report at research/issue-{issue_number}/README.md
            Integrate findings from all subtask reports
            Link to subtask reports using relative markdown links:
            
            
            
            markdown     For detailed analysis on [specific topic], see [Task 1 Report](./reports/task-1-topic-name.md)
            
            Include a table of contents linking to all subtask reports
            
            
            Finalize and Version Control:
            
            Delete the plan.md file (it's only for work tracking, not for submission)
            Ensure all report files are complete with proper references
            File structure before commit should be:
            
            
            
                 research/issue-{issue_number}/
                 ‚îú‚îÄ‚îÄ README.md (main synthesized report)
                 ‚îî‚îÄ‚îÄ reports/
                     ‚îú‚îÄ‚îÄ task-1-[topic].md
                     ‚îú‚îÄ‚îÄ task-2-[topic].md
                     ‚îî‚îÄ‚îÄ ...
            
            Git Workflow:
            
            Create a new branch: git checkout -b research/issue-{issue_number}
            Stage research files: git add research/issue-{issue_number}/
            Commit: git commit -m "feat: Add research report for issue #{issue_number}"
            Push: git push origin research/issue-{issue_number}
            
            
            Issue Comment:
            
            Post a brief comment on the original issue:
            
            
            
            markdown     Research completed for this issue.
                 
                 üìÅ Branch: `research/issue-{issue_number}`
                 üìÑ Main Report: [`research/issue-{issue_number}/README.md`](link-to-file)
                 üìö Detailed Reports: Available in `research/issue-{issue_number}/reports/`
                 
                 The research covers all mentioned aspects with detailed analysis and references.
                 Please review and provide feedback.
            Report Requirements:
            
            All reports must be in markdown format
            Key conclusions must include references: According to [Study Name](URL), ...
            Use markdown formatting for citations: [1], [2] with a References section at the end
            Cross-link between reports using relative paths
            Main README.md should serve as an executive summary with links to detailed reports
            
            Quality Standards:
            
            Each subtask report should be comprehensive and stand-alone
            References should be authoritative and recent
            Use proper markdown formatting (headers, lists, code blocks, links)
            Ensure all internal links work correctly before committing

          # Optional: Add claude_args to customize behavior and configuration
          # See https://github.com/anthropics/claude-code-action/blob/main/docs/usage.md
          # or https://docs.anthropic.com/en/docs/claude-code/sdk#command-line for available options
          claude_args: '--allowedTools "Write,Edit,WebSearch,WebFetch,TodoWrite,Bash(git *)"'

